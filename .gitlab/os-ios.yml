# OS-specific builder configurations and build commands

# Base config
.base:
    variables:
        # WARNING: This is only for debugging and must not be enabled on real builds as it leak
        # secrets and keys in the log
        # CI_DEBUG_TRACE: "true"

.conf:env:
    extends: .base

    variables:
        # Note that shell runners only support runners with a single
        # concurrency level. We can't use `$CI_CONCURRENT_ID` because this may
        # change between the build and test stages which we doesn't support.
        # Even if we could, it could change if other runners on the machine
        # could run at the same time, so we drop it.
        # GIT_CLONE_PATH: ""

        GIT_SUBMODULE_STRATEGY: "recursive"
        # technique to avoid downloading NDK from internet during build
        DOWNLOAD_NDK: "false"

.conf:runner:tags:
    tags:
        - shell
        - concurrent
        - android-ndk-r16b

.conf:debug:
    variables:
        CONFIGURATION: "Debug"

.conf:release:
    variables:
        CONFIGURATION: "Release"

.conf:release:testSDK:
    extends:
        - .conf:env
        - .conf:release
        - .conf:runner:tags
        - .conf:rule:default

.before_script_ios: &before_script_ios
    - pwd

.testSDK:do:
    stage: Test SDK

    script:
        - *before_script_ios
        - pod install
        - xcodebuild -workspace verification-ios-sdk.xcworkspace -scheme Verification -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 8' test

    interruptible: true

.buildSample:do:
    stage: Build Sample

    script:
        - *before_script_ios
        - echo 'Building sample'
        - pod install
        - mkdir artifacts
        - security unlock-keychain -p $KEY_PASS appledev.keychain
        - xcodebuild -workspace verification-ios-sdk.xcworkspace -scheme VerificationSample archive -derivedDataPath artifacts -archivePath artifacts/VerificationSample.xcarchive
        - xcodebuild -exportArchive -archivePath artifacts/VerificationSample.xcarchive -exportOptionsPlist VerificationSample/exportOptionsAdHoc.plist -exportPath artifacts/IPA

    interruptible: true

.publishToCocoaPods:do:
    stage: Publish To CocoaPods

    script:
        - *before_script_ios
        - echo 'Publishing to CocoaPods' #TODO

    interruptible: true
